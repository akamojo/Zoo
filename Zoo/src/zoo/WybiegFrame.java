/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zoo;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author akamojo
 */
public class WybiegFrame extends javax.swing.JFrame {

    private int etat;
    private int nr = -1;
    private WybiegiFrame parent;

    /**
     * Creates new form RaportFrame
     */
    public WybiegFrame(WybiegiFrame parent, int nr) throws SQLException {
        initComponents();
        Zoo.setIconAndCursor(this);
        this.nr = nr;
        this.parent = parent;
        this.fill(nr);
    }

    public WybiegFrame(int nr) throws SQLException {
        initComponents();
        Zoo.setIconAndCursor(this);
        this.nr = nr;
        this.parent = null;
        this.fill(nr);
    }

    public void fill(int nr) throws SQLException {

        this.nr = nr;

        Execute exec = new Execute();
        exec.ExecuteQuery("SELECT OPIS_WYBIEGU FROM WYBIEGI WHERE NR = " + Integer.toString(nr));
        ResultSet rs = exec.getRs();

        if (rs.next()) {
            this.setTitle("Wybieg numer " + Integer.toString(nr));
            this.descrTextArea.setText(rs.getString(1));
        }

    }

    public DefaultComboBoxModel<String> loadNrWybiegu() throws SQLException {

        Execute exec = new Execute();
        exec.ExecuteQuery("SELECT COUNT(*) FROM WYBIEGI");
        ResultSet rs = exec.getRs();

        int count = 0;
        if (rs.next()) {
            count = rs.getInt(1);
        }
        String[] types = new String[count];

        exec.ExecuteQuery("SELECT NR FROM WYBIEGI ORDER BY NR ASC");
        rs = exec.getRs();
        for (int i = 0; i < count; i++) {
            rs.next();
            types[i] = rs.getString(1);
        }
        return new javax.swing.DefaultComboBoxModel<String>(types);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        linkPanel = new javax.swing.JPanel();
        editButton = new javax.swing.JButton();
        descrPanel = new javax.swing.JPanel();
        descrLabel = new javax.swing.JLabel();
        descrScrollPane = new javax.swing.JScrollPane();
        descrTextArea = new javax.swing.JTextArea();
        controlButtonPanel = new javax.swing.JPanel();
        controlButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Raport");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                tellParent(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        linkPanel.setLayout(new java.awt.GridBagLayout());

        editButton.setText("Aktualizuj opis...");
        editButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editButtonMouseClicked(evt);
            }
        });
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        linkPanel.add(editButton, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(linkPanel, gridBagConstraints);

        descrPanel.setLayout(new java.awt.GridBagLayout());

        descrLabel.setText("Opis wybiegu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        descrPanel.add(descrLabel, gridBagConstraints);

        descrScrollPane.setMaximumSize(new java.awt.Dimension(37261, 32767));
        descrScrollPane.setPreferredSize(new java.awt.Dimension(250, 100));

        descrTextArea.setColumns(20);
        descrTextArea.setFont(new java.awt.Font("Consolas", 2, 14)); // NOI18N
        descrTextArea.setRows(5);
        descrTextArea.setMaximumSize(new java.awt.Dimension(1237878917, 2147483647));
        descrTextArea.setMinimumSize(new java.awt.Dimension(250, 20));
        descrTextArea.setName(""); // NOI18N
        descrTextArea.setPreferredSize(new java.awt.Dimension(250, 89));
        descrScrollPane.setViewportView(descrTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        descrPanel.add(descrScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(descrPanel, gridBagConstraints);

        controlButtonPanel.setLayout(new java.awt.GridBagLayout());

        controlButton.setText("Kontrola zajętości wybiegu (hihi)");
        controlButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                controlButtonMouseClicked(evt);
            }
        });
        controlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        controlButtonPanel.add(controlButton, gridBagConstraints);

        clearButton.setText("Opróżnij wybieg (hihi x2)");
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
        });
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        controlButtonPanel.add(clearButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(controlButtonPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void controlButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_controlButtonMouseClicked
        ;
    }//GEN-LAST:event_controlButtonMouseClicked

    private void editButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseClicked
        ;
    }//GEN-LAST:event_editButtonMouseClicked

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        try {

            Execute up = new Execute();
            up.ExecutePreparedQuery("UPDATE WYBIEGI SET OPIS_WYBIEGU = ? WHERE NR = " + Integer.toString(this.nr));
            up.getStatement().setString(1, descrTextArea.getText());
            up.firePreparedUpdate();

            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Opis został zmieniony.", "Aktualizacja opisu", JOptionPane.INFORMATION_MESSAGE);
            this.fill(nr);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonMouseClicked

    private void controlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlButtonActionPerformed
        try {
            // sql: CHECK_SPACE, in nr_wybiegu number
            CallableStatement cstmt = DBSupport.getConn().prepareCall("{? = call CHECK_SPACE(" + Integer.toString(this.nr) + ")}");
            cstmt.registerOutParameter(1, Types.INTEGER);
            cstmt.execute();
            Integer wynik = cstmt.getInt(1);

            if (wynik == 1) {
                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Ten wybieg ma wystarczająco"
                        + " dużo miejsca dla zwierząt, które go zamieszkują.", "Kontrola zajętości wybiegu:", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Ten wybieg ma za mało miejsca "
                        + "dla zwierząt, które go zamieszkują. :( (spróbuj je przenieść do innych wybiegów) ", "Kontrola zajętości wybiegu:", JOptionPane.ERROR_MESSAGE);
            }

            // resPracMiesiacaLabel.setText(wynik);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_controlButtonActionPerformed

    private void tellParent(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_tellParent
        if (this.parent != null) {
            this.parent.addRemoveAbility(true);
        }
    }//GEN-LAST:event_tellParent

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        try {
            // sql: CHECK_SPACE, in nr_wybiegu number
            CallableStatement cstmt = DBSupport.getConn().prepareCall("{call FREE_WYBIEG(" + Integer.toString(this.nr) + ", ?)}");
            cstmt.registerOutParameter(1, Types.INTEGER);
            cstmt.execute();
            Integer wynik = cstmt.getInt(1);

            if (wynik > 0) {
                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Wybieg wolny! " + Integer.toString(wynik) + " zwierząt "
                        + "trafiło na inne wybiegi.", "Zwalnianie wybiegu:", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nie udało się opróżnić wybiegu. (jest pusty lub nie ma dokąd"
                        + " przenieść zwierząt...)", "Zwalnianie wybiegu:", JOptionPane.ERROR_MESSAGE);
            }
            this.parent.refreshZwierzeta(Integer.toString(this.nr));

            // resPracMiesiacaLabel.setText(wynik);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WybiegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WybiegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WybiegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WybiegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new WybiegFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton controlButton;
    private javax.swing.JPanel controlButtonPanel;
    private javax.swing.JLabel descrLabel;
    private javax.swing.JPanel descrPanel;
    private javax.swing.JScrollPane descrScrollPane;
    private javax.swing.JTextArea descrTextArea;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel linkPanel;
    // End of variables declaration//GEN-END:variables
}
