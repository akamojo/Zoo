/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zoo;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author akamojo
 */
public class PodsumowanieFrame extends javax.swing.JFrame {

    /**
     * Creates new form PodsumowanieFrame
     */
    public PodsumowanieFrame() {
        initComponents();
        Zoo.setIconAndCursor(this);
        pracownikMiesiaca();
        liczZwierzeta();
        liczWybiegi();
        liczPrac();
        liczBilety();
        liczOceny();
        sredniWiek();

        tablePanel.setVisible(false);

    }

    public void pracownikMiesiaca() {
        try {
            CallableStatement cstmt = DBSupport.getConn().prepareCall("{? = call PRAC_MIESIACA()}");
            cstmt.registerOutParameter(1, Types.VARCHAR);
            cstmt.execute();
            String wynik = cstmt.getString(1);
            resPracMiesiacaLabel.setText(wynik);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    void liczZwierzeta() {
        try {
            Execute q = new Execute();
            q.ExecuteQuery("SELECT COUNT(*) FROM ZWIERZETA");
            ResultSet rs = q.getRs();
            int count = 0;
            if (rs.next()) {
                count = rs.getInt(1);
            }
            resLiczZwierzLabel.setText(Integer.toString(count));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    void liczWybiegi() {
        try {
            Execute q = new Execute();
            q.ExecuteQuery("SELECT COUNT(*) FROM WYBIEGI");
            ResultSet rs = q.getRs();
            int count = 0;
            if (rs.next()) {
                count = rs.getInt(1);
            }
            resLiczWybiegLabel.setText(Integer.toString(count));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    void liczPrac() {
        try {
            Execute q = new Execute();
            q.ExecuteQuery("SELECT COUNT(*) FROM PRACOWNICY WHERE DATA_ZWOLNIENIA IS NULL");
            ResultSet rs = q.getRs();
            int count = 0;
            if (rs.next()) {
                count = rs.getInt(1);
            }
            resLiczPracLabel.setText(Integer.toString(count));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    void liczBilety() {
        try {
            Execute q = new Execute();
            q.ExecuteQuery("SELECT COUNT(*) FROM BILETY");
            ResultSet rs = q.getRs();
            int count = 0;
            if (rs.next()) {
                count = rs.getInt(1);
            }
            resLiczBiletyLabel.setText(Integer.toString(count));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    void liczOceny() {
        try {
            Execute q = new Execute();
            q.ExecuteQuery("SELECT COUNT(*) FROM OCENY");
            ResultSet rs = q.getRs();
            int count = 0;
            if (rs.next()) {
                count = rs.getInt(1);
            }
            resLiczOcenyLabel.setText(Integer.toString(count));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    void sredniWiek() {
        try {
            Execute q = new Execute();
            q.ExecuteQuery("SELECT AVG(WIEK_KLIENTA) FROM BILETY");
            ResultSet rs = q.getRs();
            int count = 0;
            if (rs.next()) {
                count = rs.getInt(1);
            }
            resSredWiekLabel.setText(Integer.toString(count));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), ex, "Smutax Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        pracMiesiacaLabel = new javax.swing.JLabel();
        resPracMiesiacaLabel = new javax.swing.JLabel();
        liczZwierzLabel = new javax.swing.JLabel();
        resLiczZwierzLabel = new javax.swing.JLabel();
        liczWybiegLabel = new javax.swing.JLabel();
        resLiczWybiegLabel = new javax.swing.JLabel();
        liczPracLabel = new javax.swing.JLabel();
        resLiczPracLabel = new javax.swing.JLabel();
        liczBiletyLabel = new javax.swing.JLabel();
        liczOcenyLabel = new javax.swing.JLabel();
        sredWiekLabel = new javax.swing.JLabel();
        resLiczBiletyLabel = new javax.swing.JLabel();
        resLiczOcenyLabel = new javax.swing.JLabel();
        resSredWiekLabel = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        buttonsPanel = new javax.swing.JPanel();
        avgAnimalsButton = new javax.swing.JButton();
        avgWybiegiButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Podsumowanie");
        setMinimumSize(new java.awt.Dimension(400, 400));
        setSize(new java.awt.Dimension(400, 400));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        pracMiesiacaLabel.setText("Aktualny pracownik miesiąca to:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(pracMiesiacaLabel, gridBagConstraints);

        resPracMiesiacaLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(resPracMiesiacaLabel, gridBagConstraints);

        liczZwierzLabel.setText("Liczba zwierząt w naszym zoo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(liczZwierzLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        mainPanel.add(resLiczZwierzLabel, gridBagConstraints);

        liczWybiegLabel.setText("Liczba wybiegów:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(liczWybiegLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(resLiczWybiegLabel, gridBagConstraints);

        liczPracLabel.setText("Liczba pracowników:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(liczPracLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(resLiczPracLabel, gridBagConstraints);

        liczBiletyLabel.setText("Liczba sprzedanych biletów:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(liczBiletyLabel, gridBagConstraints);

        liczOcenyLabel.setText("Liczba wystawionych przez klientów ocen:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(liczOcenyLabel, gridBagConstraints);

        sredWiekLabel.setText("Średni wiek klienta:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(sredWiekLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(resLiczBiletyLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(resLiczOcenyLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(resSredWiekLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(mainPanel, gridBagConstraints);

        tablePanel.setLayout(new java.awt.GridBagLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        tableScrollPane.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        tablePanel.add(tableScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(tablePanel, gridBagConstraints);

        buttonsPanel.setLayout(new java.awt.GridBagLayout());

        avgAnimalsButton.setText("Średnie oceny zwierząt");
        avgAnimalsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avgAnimalsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        buttonsPanel.add(avgAnimalsButton, gridBagConstraints);

        avgWybiegiButton.setText("Średnie oceny wybiegów");
        avgWybiegiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avgWybiegiButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        buttonsPanel.add(avgWybiegiButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(buttonsPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getClickCount() == 2) {
            int selectionIndex = table.getSelectionModel().getMinSelectionIndex();
            if (selectionIndex >= 0) {
                CacheSqlTableModel tableModel = (CacheSqlTableModel) table.getModel();
                int selectedId = tableModel.getSelectedId(table.getSelectedRow());
                /*PracownikFrame prac = new PracownikFrame(this);
                prac.setLocation(getShowPosition2(prac));
                prac.fill(selectedId);
                prac.setVisible(true);*/
            }
        }
    }//GEN-LAST:event_tableMouseClicked

    private void avgAnimalsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avgAnimalsButtonActionPerformed
        tablePanel.setVisible(true);

        String[] columns = new String[]{"Chip", "Gatunek", "Płeć", "Numer wybiegu", "Średnia ocena"};
        CacheSqlTableModel model = new CacheSqlTableModel("select "
                + "chip, gatunki_nazwa, plec, zwierzeta.wybiegi_nr, avg(liczba_gwiazdek) as sr "
                + "from zwierzeta join oceny on chip = zwierzeta_chip group by chip, gatunki_nazwa, plec, zwierzeta.wybiegi_nr",
                columns, "ORDER BY sr DESC");
        table.setModel(model);

    }//GEN-LAST:event_avgAnimalsButtonActionPerformed

    private void avgWybiegiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avgWybiegiButtonActionPerformed
        tablePanel.setVisible(true);

        String[] columns = new String[]{"Numer", "Typ wybiegu", "Powierzchnia", "Średnia ocena"};
        CacheSqlTableModel model = new CacheSqlTableModel("select "
                + "nr, typy_wybiegu_nazwa, powierzchnia, avg(liczba_gwiazdek) as sr "
                + "from wybiegi join oceny on nr = wybiegi_nr group by nr, typy_wybiegu_nazwa, powierzchnia",
                columns, "ORDER BY sr DESC");
        table.setModel(model);
    }//GEN-LAST:event_avgWybiegiButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PodsumowanieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PodsumowanieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PodsumowanieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PodsumowanieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PodsumowanieFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton avgAnimalsButton;
    private javax.swing.JButton avgWybiegiButton;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JLabel liczBiletyLabel;
    private javax.swing.JLabel liczOcenyLabel;
    private javax.swing.JLabel liczPracLabel;
    private javax.swing.JLabel liczWybiegLabel;
    private javax.swing.JLabel liczZwierzLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel pracMiesiacaLabel;
    private javax.swing.JLabel resLiczBiletyLabel;
    private javax.swing.JLabel resLiczOcenyLabel;
    private javax.swing.JLabel resLiczPracLabel;
    private javax.swing.JLabel resLiczWybiegLabel;
    private javax.swing.JLabel resLiczZwierzLabel;
    private javax.swing.JLabel resPracMiesiacaLabel;
    private javax.swing.JLabel resSredWiekLabel;
    private javax.swing.JLabel sredWiekLabel;
    private javax.swing.JTable table;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables
}
